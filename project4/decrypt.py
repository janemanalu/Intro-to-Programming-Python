import rsa
import stdio
import sys


# Entry point.
def main():
    # Accept private-key n (int) and d (int) as command-line arguments.
    n = int(sys.argv[1])
    d = int(sys.argv[2])

    # Get the number of bits per character (call it width).
    width = rsa.bitLength(n)

    # Accept message (binary string generated by encrypt.py) from standard input
    message = stdio.readAll()

    # for i in range  [0, l âˆ’ 1) and in increments of width
    for i in range(0, len(message) - 1, width):
        # s = substring of message from i to i + width
        s = message[i:i + width]

        # set y to decimal rep of the binary string s
        y = rsa.bin2dec(s)

        # decrypt y
        x = rsa.decrypt(y, n, d)

        # write the character corresponding to the decrypted value, using a built-in func chr()
        stdio.write(chr(x))


if __name__ == '__main__':
    main()
